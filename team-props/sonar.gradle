apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/reports")
}

sonarqube {
    properties {
        property "sonar.projectVersion", "${version}"
        property "sonar.jacoco.reportPaths", ["build/jacoco/testDebugUnitTest.exec", 'build/outputs/code-coverage/connected/ONEPLUS A3003 - 8.0.0-coverage.ec']
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    // UI, "noise", generated classes, platform classes, etc.
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*'
    ]
    // generated classes
    classDirectories = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )

    // sources
    sourceDirectories = files([
            android.sourceSets.main.java.srcDirs,
            "src/main/kotlin"
    ])

    executionData = fileTree(dir: "$buildDir", includes: [
            'jacoco/testDebugUnitTest.exec'
            ,'outputs/code-coverage/connected/*coverage.ec'
    ])


}


//task sonarqube dependsOn jacocoTestReport
